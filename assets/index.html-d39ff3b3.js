import{_ as p,V as l,W as i,$ as a,Z as n,a0 as e,X as t,a1 as o,D as c}from"./framework-94985248.js";const r={},u=n("p",null,[n("br"),n("p",{style:{"font-size":"32px","font-weight":"bold"}},"目录")],-1),d=o('<ul><li><a href="#%E8%AF%AD%E6%B3%95">语法</a></li><li><a href="#%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA">项目构建</a><ul><li><a href="#%E5%88%9D%E5%A7%8B%E5%8C%96">初始化</a></li><li><a href="#%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83">代码规范</a></li></ul></li><li><a href="#%E5%8F%82%E8%80%83">参考</a></li></ul>',1),k=o(`<br><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><ul><li><strong>数据类型</strong><ul><li><strong>enum</strong> ：枚举类型对象，配合着 <code>switch</code> 使用<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> httpStatus <span class="token punctuation">{</span>
  success <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span>
  nodata <span class="token operator">=</span> <span class="token number">404</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>httpStatus<span class="token punctuation">.</span>nodata<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 404</span>
<span class="token comment">// 编译成 js 就是：两个方向的对象</span>
<span class="token keyword">var</span> httpStatus <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;200&#39;</span><span class="token operator">:</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;404&#39;</span><span class="token operator">:</span> <span class="token string">&#39;nodata&#39;</span><span class="token punctuation">,</span>
  success<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  nodata<span class="token operator">:</span> <span class="token number">404</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>当没有定义<code>value</code>时，默认从 0 开始递增下标</li><li>**</li></ul></li></ul><br><h2 id="项目构建" tabindex="-1"><a class="header-anchor" href="#项目构建" aria-hidden="true">#</a> 项目构建</h2><h3 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化" aria-hidden="true">#</a> 初始化</h3><ul><li><strong>构建 ts 项目：</strong><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>tsc <span class="token parameter variable">--init</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>配置 <code>tsconfig.json</code>：</strong><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;resolveJsonModule&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;forceConsistentCasingInFileNames&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;noImplicitAny&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;watch&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;build&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/**/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;static&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>配置 <code>package.json</code>：</strong><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;modules&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tsc&quot;</span><span class="token punctuation">,</span> <span class="token comment">// pnpm dev</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon --exec \\&quot;node --experimental-specifier-resolution=node ./build/main\\&quot;&quot;</span> <span class="token comment">// npm run build</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// pnpm i --save-dev @types/node</span>
    <span class="token property">&quot;@types/node&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^18.0.0&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 导入 node 内置模块</span>
    <span class="token property">&quot;nodemon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.0.16&quot;</span> <span class="token comment">// 监听文件更改</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="代码规范" tabindex="-1"><a class="header-anchor" href="#代码规范" aria-hidden="true">#</a> 代码规范</h3><ul><li><strong>安装：</strong><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> i <span class="token parameter variable">-D</span> eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>初始化：</strong> 然后按照提示下去就好<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>eslint <span class="token parameter variable">--init</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><br><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,11),v={href:"http://www.patrickzhong.com/TypeScript/",target:"_blank",rel:"noopener noreferrer"},m={href:"http://eslint.cn/docs/user-guide/configuring",target:"_blank",rel:"noopener noreferrer"},b={href:"https://yesifang.com/zh/TypeScript%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B/c2fff071/",target:"_blank",rel:"noopener noreferrer"};function h(q,g){const s=c("ExternalLinkIcon");return l(),i("div",null,[u,a(' @import "[TOC]" {cmd="toc" depthFrom=2 depthTo=6 orderedList=false} '),a(" code_chunk_output "),d,a(" /code_chunk_output "),k,n("ul",null,[n("li",null,[n("a",v,[e("TypeScript 中文手册"),t(s)])]),n("li",null,[n("a",m,[e("Eslint 中文文档"),t(s)])]),n("li",null,[n("a",b,[e("tsconfig 的配置"),t(s)])])])])}const f=p(r,[["render",h],["__file","index.html.vue"]]);export{f as default};
