import{_ as c,V as i,W as u,$ as t,Z as n,a0 as a,X as p,Y as r,a1 as s,D as o}from"./framework-94985248.js";const k="/assets/php_file-992b51ed.png",d={},v=n("p",null,[n("br"),n("p",{style:{"font-size":"32px","font-weight":"bold"}},"目录")],-1),g=s('<ul><li><a href="#%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95">基础语法</a><ul><li><a href="#%E4%B8%80%E4%BA%9B">一些......</a></li><li><a href="#array-%E6%95%B0%E7%BB%84">Array 数组</a></li><li><a href="#cookie-%E4%B8%8E-session">Cookie 与 Session</a></li><li><a href="#%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C">文件操作</a></li><li><a href="#%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E4%BF%A1%E6%81%AF">服务器环境信息</a></li></ul></li><li><a href="#%E8%A1%A8%E5%8D%95">表单</a><ul><li><a href="#%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%8D%95">创建表单</a></li><li><a href="#%E5%A4%84%E7%90%86%E7%99%BB%E5%BD%95">处理登录</a></li></ul></li><li><a href="#%E8%BF%9E%E6%8E%A5-mysql">连接 MySQL</a><ul><li><a href="#pdo-%E7%B1%BB">PDO 类</a></li><li><a href="#pdostatement-%E7%B1%BB">PDOstatement 类</a></li></ul></li></ul>',1),b=s(`<h2 id="基础语法" tabindex="-1"><a class="header-anchor" href="#基础语法" aria-hidden="true">#</a> 基础语法</h2><h3 id="一些" tabindex="-1"><a class="header-anchor" href="#一些" aria-hidden="true">#</a> 一些......</h3><ul><li>PHP 是<strong>弱类型语言</strong>，变量类型在运行时确定，所以不需要声明数据类型。且<strong>变量类型是动态</strong>的</li><li>变量名区分大小写，<strong>但</strong> 函数却不区分大小写。两者还可以相等但不建议</li><li><strong>输出：</strong><ul><li><code>echo &#39;$d is: &#39;, &quot;$d desu;&quot;, EOL</code> 中，单引号的变量输出变量名，双引号的输出变量值</li><li>会输出到终端或浏览器页面上</li><li>浏览器的换行只能是 <code>&lt;br&gt;</code> 或 <code>&lt;p&gt;</code>，终端上的是 <code>&quot;\\n&quot;</code></li></ul></li></ul><h3 id="array-数组" tabindex="-1"><a class="header-anchor" href="#array-数组" aria-hidden="true">#</a> Array 数组</h3><ul><li>PHP 中的 array 实际上是一个<strong>有序映射</strong>。映射是一种把 <code>values</code> 关联到 <code>keys</code> 的类型。此类型针对多种不同用途进行了优化； 它可以被视为数组、列表（向量）、哈希表（映射的实现）、字典、集合、堆栈、队列等等</li><li><strong>定义：</strong> 且 key 值唯一<div class="language-PHP line-numbers-mode" data-ext="PHP"><pre class="language-PHP"><code>// 普通数组
$a = [1, 2, 3];
// 字典 map
$map = [
    key1 =&gt; value1, // key 只能是 string 或 int
    key2 =&gt; value2  // value 可以是任意类型
];
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>此外 key 会有如下的 <strong>强制转换：</strong><ul><li><code>String</code> 中包含有效的十进制 <code>int</code> ，除非数字前面有一个 + 号，否则将被转换为 int 类型。另外， &quot;08&quot; 不会被强制转换，因为它不是一个有效的十进制整数</li><li><code>Float</code> 也会被转换为 <code>int</code> ，意味着其小数部分会被舍去</li><li><code>Bool</code> 也会被转换成 <code>int</code></li><li><code>Null</code> 会被转换为空字符串，即键名 <code>null</code> 实际会被储存为 &quot;&quot;</li><li><code>Array</code> 和 <code>object</code> 不能 被用为键名。坚持这么做会导致警告：Illegal offset type</li></ul></li><li>添加键值可直接用赋值：<code>$a[&#39;new&#39;] = &#39;mie&#39;;</code> 删除键值：<code>unset($a[&#39;key&#39;]);</code>，但下标并不会重新分配</li><li><strong>循环：</strong><ul><li>普通 for<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;: &quot;</span><span class="token punctuation">,</span> <span class="token variable">$a</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">EOL</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>foreach<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$arr</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;: &#39;</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token constant">EOL</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><strong>排序：</strong><ul><li><code>sort</code>、<code>asort</code>：按值升序</li><li><code>ksort</code>：按键升序</li></ul></li></ul><h3 id="cookie-与-session" tabindex="-1"><a class="header-anchor" href="#cookie-与-session" aria-hidden="true">#</a> Cookie 与 Session</h3><ul><li><p><strong>Cookie:</strong></p><ul><li><code>setcookie(name, value, expire, path, domain);</code></li><li>参数： <ul><li>name：Cookie 的变量名</li><li>value：Cookie 的变量值</li><li>expire：Cookie 的有效期</li><li>path：Cookie 的服务器路径</li><li>domain：Cookie 的有效域名</li><li>secure:是否采用 HTTPS 来传输 Cookie</li></ul></li><li>有效期单位为秒，<code>time() + $expire</code> ，改为减号则为删除 Cookie</li></ul></li><li><p><strong>Session:</strong></p><ul><li>在 php 文件的开头必须先启动：<code>session_start()</code></li><li><code>$_SESSION</code> 本质上就是个数组</li><li>销毁 session：<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$_SESSION</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="文件操作" tabindex="-1"><a class="header-anchor" href="#文件操作" aria-hidden="true">#</a> 文件操作</h3><ul><li><p>从表单中上传文件：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fish.php<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>multipart/form-data<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  上传：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>提交<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>上传并储存文件：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;file&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;error&quot;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;错误：&quot;</span> <span class="token operator">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;file&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;error&quot;</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;上传文件名: &quot;</span> <span class="token operator">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;file&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;文件类型: &quot;</span> <span class="token operator">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;file&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;type&quot;</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;文件大小: &quot;</span> <span class="token operator">.</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;file&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;size&quot;</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot; kB&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;文件临时存储的位置: &quot;</span> <span class="token operator">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;file&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;tmp_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;upload/&quot;</span> <span class="token operator">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;file&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;file&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot; 文件已经存在。 &quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 如果 upload 目录不存在该文件则将文件上传到 upload 目录下</span>
        <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;file&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;tmp_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;upload/&quot;</span> <span class="token operator">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;file&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;文件存储在: &quot;</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;upload/&quot;</span> <span class="token operator">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;file&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>读写文件：</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;mode&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打开文件</span>
<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 关闭文件</span>
<span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 读取行</span>
<span class="token function">fgetc</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取字符</span>
<span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token variable">$mie</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//写入</span>
<span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 文件尾 (return bool)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>读写模式：</strong></p></li><li><p><img src="`+k+`" alt=""></p></li></ul><h3 id="服务器环境信息" tabindex="-1"><a class="header-anchor" href="#服务器环境信息" aria-hidden="true">#</a> 服务器环境信息</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11),m={href:"https://www.php.net/manual/zh/reserved.variables.server.php",target:"_blank",rel:"noopener noreferrer"},h=s(`<h2 id="表单" tabindex="-1"><a class="header-anchor" href="#表单" aria-hidden="true">#</a> 表单</h2><h3 id="创建表单" tabindex="-1"><a class="header-anchor" href="#创建表单" aria-hidden="true">#</a> 创建表单</h3><ul><li>在 <a href="html.md#表单"><b>HTML</b></a> 中的表单</li><li><strong>获取：</strong> 且返回的是数组<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$_POST</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token variable">$_GET</span> <span class="token operator">|</span> <span class="token variable">$_REQUEST</span> <span class="token comment">// 必须全大写</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>常见表单元素处理：</strong> 至于表单元素中的文本框文本域一类的元素，都是直接将元素的 name 属性值作为<strong>键</strong>，用户填写的信息作为<strong>值</strong>，发送到服务端 <ul><li>将 <strong>多选</strong> 或是 <strong>下拉选项</strong> 中将选项返回成数组，则 name 后加上 <code>[ ]</code>： <code>&lt;input name=&quot;fish[]&quot;&gt;</code></li><li>防注入的表单验证：<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">test_input</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token function">stripslashes</span><span class="token punctuation">(</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>trim</code>：去除没必要的空格、换行 <code>stripslashes</code>：去除反斜杠 <code>htmlspecialchars</code>：转为 HTML 实体符号</p></blockquote></li></ul></li></ul><h3 id="处理登录" tabindex="-1"><a class="header-anchor" href="#处理登录" aria-hidden="true">#</a> 处理登录</h3><ul><li><p>以简单为例：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login.php<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POST<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>
    账号：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
    密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>提交<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>处理：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//启动session储存</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;login&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//通常地防注入处理</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$name</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;&#39;</span> <span class="token operator">||</span> <span class="token variable">$password</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;不准空&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">exit</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$name</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;fish&#39;</span> <span class="token operator">||</span> <span class="token variable">$password</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;fish&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;不准错&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">exit</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span>
        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;is_login&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;code&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;location:index.php&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//跳转链接时的 HTTP头</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>目标页面判断登录状态：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;is_login&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;is_login&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  xxx
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>mie</p></li></ul><h2 id="连接-mysql" tabindex="-1"><a class="header-anchor" href="#连接-mysql" aria-hidden="true">#</a> 连接 MySQL</h2><p>PHP 数据对象 （PDO） 扩展为 PHP 访问数据库定义了一个轻量级的一致接口。实现 PDO 接口的每个数据库驱动可以公开具体数据库的特性作为标准扩展功能</p>`,7),q={href:"https://www.runoob.com/php/php-pdo.html",target:"_blank",rel:"noopener noreferrer"},f=n("h3",{id:"pdo-类",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pdo-类","aria-hidden":"true"},"#"),a(" PDO 类")],-1),_=s(`<li><p><code>PDO::__construct($dsn ,$username, $password)</code> 创建一个表示数据库连接的 PDO 实例：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token variable">$dbh</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token variable">$dsn</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;Connection failed: &#39;</span> <span class="token operator">.</span> <span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>exec ($statement) : int</code> 执行 SQL 语句，并返回影响的行数：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$dbh</span><span class="token operator">-&gt;</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>query ($statement) : PDOStatement</code> 执行 SQL 语句，并返回 PDOstatement 类的结果</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token variable">$dbh</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>prepare($sql)</code>：预处理功能，在多次执行相同的 SQL 语句并且只是更换了参数（例如表名，字段名）的情况可以大幅提高执行效率</p><blockquote><p>一次编译、多次运行，省去了解析优化等过程；此外预编译语句能防止 SQL 注入</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$sql</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;insert into userinfo values(?, ?)&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$in_result</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$user</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;php3&quot;</span><span class="token punctuation">;</span> <span class="token variable">$pwd1</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;111111&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$in_result</span><span class="token operator">-&gt;</span><span class="token function">bindParam</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$in_result</span><span class="token operator">-&gt;</span><span class="token function">bindParam</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token variable">$pwd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$in_result</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$in_result</span><span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;插入记录失败!&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;插入记录成功!&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,4),$=n("strong",null,"事务：",-1),y=s(`<ul><li><code>beginTransaction()</code>：开始事务</li><li><code>rollback()</code>：回滚事务</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;set names utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$rows</span><span class="token operator">=</span><span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$rows</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">PDOException</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;成功!&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">rollBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//回滚(要么成功要么失败)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),E=s("<li><p>其他函数：</p><ul><li><code>PDO::getAttribute()</code> — 取回一个数据库连接的属性</li><li><code>PDO::getAvailableDrivers()</code> — 返回一个可用驱动的数组</li><li><code>PDO::inTransaction()</code> — 检查是否在一个事务内</li><li><code>PDO::lastInsertId()</code> — 返回最后插入行的 ID 或序列值</li></ul></li>",1),w=s('<h3 id="pdostatement-类" tabindex="-1"><a class="header-anchor" href="#pdostatement-类" aria-hidden="true">#</a> PDOstatement 类</h3><ul><li><code>fetch($fetch_style)</code> 从结果集 中获取下一行（只有一行结果）。其中的参数： <ul><li><code>PDO::FETCH_ASSOC</code> ：返回一个索引为结果集列名的数组</li><li><code>PDO::FETCH_BOTH</code> （默认）：返回一个索引为结果集列名和以 0 开始的列号的数组</li><li><code>PDO::FETCH_BOUND</code> ：返回 true ，并分配结果集中的列值给 PDOStatement::bindColumn() 方法绑定的 PHP 变量</li><li><code>PDO::FETCH_CLASS</code> ：返回一个请求类的新实例，映射结果集中的列名到类中对应的属性名</li><li><code>PDO::FETCH_INTO</code> ` ：更新一个被请求类已存在的实例，映射结果集中的列到类中命名的属性</li><li><code>PDO::FETCH_LAZY</code> ：结合使用 <code>PDO::FETCH_BOTH</code> 和 <code>PDO::FETCH_OBJ</code> ，创建供用来访问的对象变量名</li><li><code>PDO::FETCH_NUM</code> ：返回一个索引为以 0 开始的结果集列号的数组</li><li><code>PDO::FETCH_OBJ</code> ：返回一个属性名对应结果集列名的匿名对象</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$dbh</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">FETCH_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><code>fetchAll($fetch_style)</code> 返回结果的所有行</li></ul>',2);function P(S,x){const e=o("ExternalLinkIcon"),l=o("RouterLink");return i(),u("div",null,[v,t(' @import "[TOC]" {cmd="toc" depthFrom=2 depthTo=6 orderedList=false} '),t(" code_chunk_output "),g,t(" /code_chunk_output "),b,n("p",null,[n("a",m,[a("文档"),p(e)])]),h,n("blockquote",null,[n("p",null,[a("字典："),n("a",q,[a("PHP_PDO"),p(e)])])]),f,n("ul",null,[_,n("li",null,[n("p",null,[$,a(),p(l,{to:"/Language/MySQL.html#%E4%BA%8B%E5%8A%A1"},{default:r(()=>[a("MySQL 事务")]),_:1})]),y]),E]),w])}const D=c(d,[["render",P],["__file","PHP.html.vue"]]);export{D as default};
